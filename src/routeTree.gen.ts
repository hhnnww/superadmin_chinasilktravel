/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as AdminGoogleAdpageRouteImport } from './routes/admin/googleAdpage/route'
import { Route as AdminGoogleAdpageSalerImport } from './routes/admin/googleAdpage/saler'
import { Route as AdminGoogleAdpagePageImport } from './routes/admin/googleAdpage/page'
import { Route as AdminGoogleAdpagePageIndexImport } from './routes/admin/googleAdpage/page.index'
import { Route as AdminGoogleAdpagePageIdImport } from './routes/admin/googleAdpage/page.$id'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminGoogleAdpageRouteRoute = AdminGoogleAdpageRouteImport.update({
  id: '/googleAdpage',
  path: '/googleAdpage',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminGoogleAdpageSalerRoute = AdminGoogleAdpageSalerImport.update({
  id: '/saler',
  path: '/saler',
  getParentRoute: () => AdminGoogleAdpageRouteRoute,
} as any)

const AdminGoogleAdpagePageRoute = AdminGoogleAdpagePageImport.update({
  id: '/page',
  path: '/page',
  getParentRoute: () => AdminGoogleAdpageRouteRoute,
} as any)

const AdminGoogleAdpagePageIndexRoute = AdminGoogleAdpagePageIndexImport.update(
  {
    id: '/',
    path: '/',
    getParentRoute: () => AdminGoogleAdpagePageRoute,
  } as any,
)

const AdminGoogleAdpagePageIdRoute = AdminGoogleAdpagePageIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AdminGoogleAdpagePageRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/admin/googleAdpage': {
      id: '/admin/googleAdpage'
      path: '/googleAdpage'
      fullPath: '/admin/googleAdpage'
      preLoaderRoute: typeof AdminGoogleAdpageRouteImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/googleAdpage/page': {
      id: '/admin/googleAdpage/page'
      path: '/page'
      fullPath: '/admin/googleAdpage/page'
      preLoaderRoute: typeof AdminGoogleAdpagePageImport
      parentRoute: typeof AdminGoogleAdpageRouteImport
    }
    '/admin/googleAdpage/saler': {
      id: '/admin/googleAdpage/saler'
      path: '/saler'
      fullPath: '/admin/googleAdpage/saler'
      preLoaderRoute: typeof AdminGoogleAdpageSalerImport
      parentRoute: typeof AdminGoogleAdpageRouteImport
    }
    '/admin/googleAdpage/page/$id': {
      id: '/admin/googleAdpage/page/$id'
      path: '/$id'
      fullPath: '/admin/googleAdpage/page/$id'
      preLoaderRoute: typeof AdminGoogleAdpagePageIdImport
      parentRoute: typeof AdminGoogleAdpagePageImport
    }
    '/admin/googleAdpage/page/': {
      id: '/admin/googleAdpage/page/'
      path: '/'
      fullPath: '/admin/googleAdpage/page/'
      preLoaderRoute: typeof AdminGoogleAdpagePageIndexImport
      parentRoute: typeof AdminGoogleAdpagePageImport
    }
  }
}

// Create and export the route tree

interface AdminGoogleAdpagePageRouteChildren {
  AdminGoogleAdpagePageIdRoute: typeof AdminGoogleAdpagePageIdRoute
  AdminGoogleAdpagePageIndexRoute: typeof AdminGoogleAdpagePageIndexRoute
}

const AdminGoogleAdpagePageRouteChildren: AdminGoogleAdpagePageRouteChildren = {
  AdminGoogleAdpagePageIdRoute: AdminGoogleAdpagePageIdRoute,
  AdminGoogleAdpagePageIndexRoute: AdminGoogleAdpagePageIndexRoute,
}

const AdminGoogleAdpagePageRouteWithChildren =
  AdminGoogleAdpagePageRoute._addFileChildren(
    AdminGoogleAdpagePageRouteChildren,
  )

interface AdminGoogleAdpageRouteRouteChildren {
  AdminGoogleAdpagePageRoute: typeof AdminGoogleAdpagePageRouteWithChildren
  AdminGoogleAdpageSalerRoute: typeof AdminGoogleAdpageSalerRoute
}

const AdminGoogleAdpageRouteRouteChildren: AdminGoogleAdpageRouteRouteChildren =
  {
    AdminGoogleAdpagePageRoute: AdminGoogleAdpagePageRouteWithChildren,
    AdminGoogleAdpageSalerRoute: AdminGoogleAdpageSalerRoute,
  }

const AdminGoogleAdpageRouteRouteWithChildren =
  AdminGoogleAdpageRouteRoute._addFileChildren(
    AdminGoogleAdpageRouteRouteChildren,
  )

interface AdminRouteRouteChildren {
  AdminGoogleAdpageRouteRoute: typeof AdminGoogleAdpageRouteRouteWithChildren
  AdminIndexRoute: typeof AdminIndexRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminGoogleAdpageRouteRoute: AdminGoogleAdpageRouteRouteWithChildren,
  AdminIndexRoute: AdminIndexRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/admin/googleAdpage': typeof AdminGoogleAdpageRouteRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/admin/googleAdpage/page': typeof AdminGoogleAdpagePageRouteWithChildren
  '/admin/googleAdpage/saler': typeof AdminGoogleAdpageSalerRoute
  '/admin/googleAdpage/page/$id': typeof AdminGoogleAdpagePageIdRoute
  '/admin/googleAdpage/page/': typeof AdminGoogleAdpagePageIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/admin/googleAdpage': typeof AdminGoogleAdpageRouteRouteWithChildren
  '/admin': typeof AdminIndexRoute
  '/admin/googleAdpage/saler': typeof AdminGoogleAdpageSalerRoute
  '/admin/googleAdpage/page/$id': typeof AdminGoogleAdpagePageIdRoute
  '/admin/googleAdpage/page': typeof AdminGoogleAdpagePageIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/admin/googleAdpage': typeof AdminGoogleAdpageRouteRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/admin/googleAdpage/page': typeof AdminGoogleAdpagePageRouteWithChildren
  '/admin/googleAdpage/saler': typeof AdminGoogleAdpageSalerRoute
  '/admin/googleAdpage/page/$id': typeof AdminGoogleAdpagePageIdRoute
  '/admin/googleAdpage/page/': typeof AdminGoogleAdpagePageIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/login'
    | '/admin/googleAdpage'
    | '/admin/'
    | '/admin/googleAdpage/page'
    | '/admin/googleAdpage/saler'
    | '/admin/googleAdpage/page/$id'
    | '/admin/googleAdpage/page/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/admin/googleAdpage'
    | '/admin'
    | '/admin/googleAdpage/saler'
    | '/admin/googleAdpage/page/$id'
    | '/admin/googleAdpage/page'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/login'
    | '/admin/googleAdpage'
    | '/admin/'
    | '/admin/googleAdpage/page'
    | '/admin/googleAdpage/saler'
    | '/admin/googleAdpage/page/$id'
    | '/admin/googleAdpage/page/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/googleAdpage",
        "/admin/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/admin/googleAdpage": {
      "filePath": "admin/googleAdpage/route.tsx",
      "parent": "/admin",
      "children": [
        "/admin/googleAdpage/page",
        "/admin/googleAdpage/saler"
      ]
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/admin/googleAdpage/page": {
      "filePath": "admin/googleAdpage/page.tsx",
      "parent": "/admin/googleAdpage",
      "children": [
        "/admin/googleAdpage/page/$id",
        "/admin/googleAdpage/page/"
      ]
    },
    "/admin/googleAdpage/saler": {
      "filePath": "admin/googleAdpage/saler.tsx",
      "parent": "/admin/googleAdpage"
    },
    "/admin/googleAdpage/page/$id": {
      "filePath": "admin/googleAdpage/page.$id.tsx",
      "parent": "/admin/googleAdpage/page"
    },
    "/admin/googleAdpage/page/": {
      "filePath": "admin/googleAdpage/page.index.tsx",
      "parent": "/admin/googleAdpage/page"
    }
  }
}
ROUTE_MANIFEST_END */
